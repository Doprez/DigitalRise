<?xml version="1.0" encoding="utf-8"?>
<topic id="e6f0e7fc-85dd-4722-af1b-dcba453f9418" revisionNumber="1">
    <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

        <introduction>
            <para>
                This topic discusses the
                <codeEntityReference qualifyHint="false">T:DigitalRise.Animation.Character.LookAtIKSolver</codeEntityReference>.
            </para>
            <autoOutline/>
        </introduction>


        <section address="Video">
            <title>Sample and video</title>
            <content>
                <para>
                    The <link xlink:href="dde51686-4f07-4c54-95d4-756ec929cb57" /> contain an example
                    which demonstrates how to use the
                    <codeEntityReference qualifyHint="false">T:DigitalRise.Animation.Character.LookAtIKSolver</codeEntityReference>.
                    Here is a video of this sample:
                </para>
                <list class="nobullet">
                    <listItem>
                        <para>
                            <externalLink>
                                <linkText>Video: Look-At IK Solver</linkText>
                                <linkUri>http://www.youtube.com/watch?v=jzDCvlWvhfY</linkUri>
                            </externalLink>
                        </para>
                    </listItem>
                </list>
            </content>
        </section>


        <section address="Description">
            <title>Description</title>
            <content>
                <para>
                    The look-at IK solver influences a single bone. The bone is rotated to look at a certain
                    target position. Often it is only used to rotate the "head" bone of the model. But you
                    can also apply several look-at IK solvers to a whole bone chain to create a more natural
                    animation.
                </para>
                <para>
                    In the video, look-at IK solvers are used for the head bone, the neck bone and several
                    spine bones. All bones will try to look at the target. The character does not only rotate
                    the head, it will also bend and rotate the upper torso.
                </para>
                <para>
                    Each IK solver has a
                    <codeEntityReference qualifyHint="false">P:DigitalRise.Animation.Character.IKSolver.Weight</codeEntityReference>
                    property, which can be used to reduce the IK solver’s
                    influence. The solver for the head bone uses a weight of 1. The other solvers use a
                    gradually lower value. This means, the head will look directly at the target; the other
                    bones show a more subtle motion.
                </para>
            </content>
        </section>


        <section address="Tips">
            <title>Tips</title>
            <content>
                <para>
                    Depending on the animated model, the results of the look-at IK can appear weird for
                    certain target positions. Test which target locations look okay and keep the look-at target
                    in this range. For example: Often, you want to avoid target positions that are very close
                    to the head, very low on the ground, very high in the air or directly behind the character.
                </para>
                <para>
                    The look-at IK solver has a
                    <codeEntityReference qualifyHint="false">P:DigitalRise.Animation.Character.LookAtIKSolver.Limit</codeEntityReference>
                    property where you can define the max angle of the rotation.
                </para>
                <para>
                    Sometimes the character head "snaps" to a new position. This happens when the IK solver
                    is switched on, when the target position is set to a whole new position, or when the
                    target is at an extreme position (e.g. directly behind the head). To avoid this, you can
                    slowly fade-in the weight of the IK solver, or you can use an artificial target position
                    that slowly transitions to the actual target position. (Of course, you can use the
                    animation system to create a fade-in animation that controls the weight or an animation
                    that changes the target position!)
                </para>
                <para>
                    You can also dynamically adjust the solver weights if poses appear strange. For example,
                    the model in the video looks natural when it bends down to look at the ground. But bending
                    back to look into the sky creates an unnatural pose. In this case the weight of the spine
                    bone IK solvers can be reduced when the target is above eye height.
                </para>
                <para>
                    The look-at IK solver example from the video is one of many examples that come with the
                    DigitalRise Engine. You can find more details in the example’s source code.
                </para>
            </content>
        </section>


        <relatedTopics>
        </relatedTopics>

    </developerConceptualDocument>
</topic>
